#CATEGORY "46" "Qsys" // Custom
#SYMBOL_NAME "Qsys Generic Integer Named Control"

#USER_SIMPLSHARP_LIBRARY "QscQsys"

#DEFINE_CONSTANT true 1
#DEFINE_CONSTANT false 0

analog_input SetIntegerValue;

analog_Output IntegerValueScaled, IntegerValueUnscaled;

string_parameter  _skip_, _skip_, CoreID[100], NamedControlName[100];
integer_parameter Scaled;

#BEGIN_PARAMETER_PROPERTIES CoreID
   propValidUnits = unitString;
   propDefaultUnit = unitString;
   propDefaultValue = "1";
#END_PARAMETER_PROPERTIES

#BEGIN_PARAMETER_PROPERTIES Scaled
   propValidUnits = unitDecimal;
   propDefaultUnit = unitDecimal;
   propDefaultValue = 0d;
   propList = { 0d , "No" } , { 1d , "Yes" };

#END_PARAMETER_PROPERTIES



QsysNamedControl integerControl;
signed_long_integer intVal;
integer changeSemephore;

change SetIntegerValue
{
    signed_long_integer x;
    intVal = SetIntegerValue;

    if(changeSemephore)
    {
        changeSemephore = false;
        if(intVal = 0)
        {
            x = intVal;
            integerControl.SetInteger(x, Scaled);
        }
        while(x != intVal)
        {
            x = intVal;
            integerControl.SetInteger(x, Scaled);
        }

        changeSemephore = true;
    }
}

callback function NewUIntChange(string cName, integer value)
{
    IntegerValueScaled = value;
}

callback function NewIntChange(string cName, signed_integer value)
{
    IntegerValueUnscaled = value;
}

function Main()
{
    RegisterDelegate(integerControl, newNamedControlUIntChange, NewUIntChange);
    RegisterDelegate(integerControl, newNamedControlIntChange, NewIntChange);
    integerControl.Initialize(CoreID, NamedControlName, 1);

    changeSemephore = true;
}
